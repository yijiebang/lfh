<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<#assign order="${"+"order}">
<#assign where="${"+"where}">
<#assign sumField="${"+"sumField}">
<#assign maxField="${"+"maxField}">
<#assign limitField="${"+"limit}">
<#assign for_update="${"+"for_update}">
<#assign table_and_alias= " ${table.sqlName} ${table_alias_prefix}${table.sqlName} ">
<#assign table_alias=(table_alias_prefix)+(table.sqlName)>
<#assign b_table_pk_column = ((table.pkColumn)?? && (table.pkColumns?size == 1))>
<#if b_table_pk_column>
	<#assign table_pk_column = table.pkColumn>
</#if>
<#if b_table_pk_column>
	<#assign table_pk_column = table.pkColumn>
</#if>
<#assign full_class_name = (basePackage)+".${entityPackage}."+(className)>
<mapper namespace="${basePackage}.${daoPackage}.${className}Mapper">
	<!--
		WARNING - @mbggenerated
		This element is automatically generated by Zqgame Generator, do not modify.
		This element was generated on ${now?string('yyyy-MM-dd HH:mm:ss')}.
	-->
	<@BaseResultMap />
	<@getByCriteria_PAGE />
	<@getByCriteria_NON_PAGE />
	<@getTotalCountBy />
	<@getSumBy />
	<@getMaxBy />
	<@getByPK />
	<@insert />
	<@update />
	<@delete />
	<@Base_Column_List />

	<#macro itemWithJdbcType item column>${"#"}{${item},jdbcType=${column.jdbcType}}</#macro>
	<#macro itemWithJdbcTypeByEntity item column>${"#"}{entity.${item},jdbcType=${column.jdbcType}}</#macro>
	<#macro filterKeyWords column><#if (keywords?index_of(',${column.sqlName?upper_case},')>=0)>`${column.sqlName}`<#else>${column.sqlName}</#if></#macro>
	<#macro BaseResultMap>
	<resultMap id="BaseResultMap" type="${full_class_name}">
		<#list table.columns as column>
		<result column="${table_alias}_${column.sqlName}" property="${column.javaProperty?uncap_first}" jdbcType="${column.jdbcType}" />
		</#list>
	</resultMap>
	</#macro>
	<#macro getByCriteria_PAGE>
	<select id="getDataPageBy" resultMap="BaseResultMap" parameterType="java.util.HashMap">
			SELECT
			<include refid="Base_Column_List" />
			FROM ${table_and_alias} ${where} ${order}
	</select>
	</#macro>
	<#macro getByCriteria_NON_PAGE>
	<select id="getDataBy" resultMap="BaseResultMap" parameterType="java.util.HashMap">
			SELECT
			<include refid="Base_Column_List" />
			FROM ${table_and_alias} ${where} ${order} ${limitField} ${for_update}
	</select>
	</#macro>
	<#macro getTotalCountBy>
	<select id="getTotalCountBy" parameterType="java.util.HashMap" resultType="java.lang.Long">
		SELECT COUNT(*) FROM ${table_and_alias} ${where}
	</select>
	</#macro>
	<#macro getSumBy>
	<select id="getSumBy" parameterType="java.util.HashMap" resultType="java.lang.Double">
		SELECT SUM(${sumField}) FROM ${table_and_alias} ${where}
	</select>
	</#macro>
	<#macro getMaxBy>
	<select id="getMaxBy" parameterType="java.util.HashMap" resultType="java.lang.String">
		SELECT MAX(${maxField}) FROM ${table_and_alias} ${where}
	</select>
	</#macro>
	<#macro getByPK>
	<#if b_table_pk_column>
	<select id="getById" resultMap="BaseResultMap" parameterType="java.util.HashMap">
			SELECT
			<include refid="Base_Column_List" />
			FROM ${table_and_alias}
			WHERE ${table_alias}.${table_pk_column.sqlName} = <@itemWithJdbcType "key_value" table_pk_column/> ${for_update}
	</select>
	<select id="getByIds" resultMap="BaseResultMap" parameterType="java.util.HashMap">
			SELECT
			<include refid="Base_Column_List" />
			FROM ${table_and_alias} WHERE
			${table_alias}.${table_pk_column.sqlName} IN
			<foreach collection="list" item="ids" open="(" separator="," close=")">
				<@itemWithJdbcType "ids" table_pk_column/>${" "}
			</foreach>
			${for_update}
	</select>
	</#if>
	</#macro>
	<#macro insert>
	<insert id="insert" parameterType="${full_class_name}">
			INSERT INTO ${table.sqlName}
			<trim prefix="(" suffix=")" suffixOverrides=",">
				<#list table.columns as column>
				<if test="${column.javaProperty?uncap_first} != null">
					${column.sqlName},
				</if>
				</#list>
			</trim>
			<trim prefix="values (" suffix=")" suffixOverrides=",">
				<#list table.columns as column>
				<if test="${column.javaProperty?uncap_first} != null">
					<@itemWithJdbcType (column.javaProperty?uncap_first) column/>,
				</if>
				</#list>
			</trim>
	</insert>
	</#macro>
	<#macro updateOfSet><set>
			<trim suffixOverrides=",">
				<#list table.columns as column>
				<if test="${column.javaProperty?uncap_first} != null">
					${table_alias}.${column.sqlName}=<@itemWithJdbcType (column.javaProperty?uncap_first) column/>,
				</if>
				</#list>
			</trim>
		</set></#macro>
	<#macro updateOfSetByEntity><set>
			<trim suffixOverrides=",">
				<#list table.columns as column>
				<if test="entity.${column.javaProperty?uncap_first} != null">
					${table_alias}.${column.sqlName}=<@itemWithJdbcTypeByEntity (column.javaProperty?uncap_first) column/>,
				</if>
				</#list>
			</trim>
		</set></#macro>
	<#macro update>
	<#if b_table_pk_column>
	<update id="update" parameterType="${full_class_name}">
			UPDATE ${table_and_alias}
			<@updateOfSet />${""}
			WHERE ${table_alias}.${table_pk_column.sqlName}=<@itemWithJdbcType (table_pk_column.javaProperty?uncap_first) table_pk_column/>
	</update>
	</#if>
	<update id="updateBy" parameterType="java.util.HashMap">
			UPDATE ${table_and_alias}
			<@updateOfSetByEntity />${""}
			${where}
	</update>
	</#macro>
	<#macro delete>
	<#if b_table_pk_column>
	<delete id="delete" parameterType="java.lang.Long">
			DELETE ${table_alias} FROM ${table.sqlName} ${table_alias} WHERE ${table_alias}.${table_pk_column.sqlName} = <@itemWithJdbcType (table_pk_column.javaProperty?uncap_first) table_pk_column/>
	</delete>
	<delete id="deleteByIds" parameterType="java.util.List">
			DELETE ${table_alias} FROM ${table.sqlName} ${table_alias} where ${table_alias}.${table_pk_column.sqlName} IN
			<foreach collection="list" item="item" open="(" separator="," close=")">
				<@itemWithJdbcType "item" table_pk_column/>${""}
			</foreach>
	</delete>
	</#if>
	<delete id="deleteBy" parameterType="java.util.HashMap">
			DELETE ${table_alias} FROM ${table.sqlName} ${table_alias} ${where}
	</delete>
	</#macro>
	<#macro Base_Column_List>
	<sql id="Base_Column_List">
			<#list table.columns as column>
			${table_alias}.${column.sqlName} as ${table_alias}_${column.sqlName}<#if column_has_next>,</#if>
			</#list>
	</sql>
	</#macro>
</mapper>